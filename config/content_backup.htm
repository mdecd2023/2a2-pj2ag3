<h1>About</h1>
<p>2a2-pj2ag3</p>
<p>倉儲:<a href="https://github.com/mdecd2023/2a2-pj2ag3">https://github.com/mdecd2023/2a2-pj2ag3</a></p>
<p>網站:<a href="https://mdecd2023.github.io/2a2-pj2ag3/content/index.html">https://mdecd2023.github.io/2a2-pj2ag3/content/index.html</a></p>
<p>組員:41023118 吳政憲</p>
<p>       41023120 呂昕叡</p>
<p>       41023122 李彥廷</p>
<p>       41023124 李茂廷</p>
<h1>pj2</h1>
<div class="container"><nav>
<div class="site-wrap">
<div class="site-mobile-menu">
<div class="site-mobile-menu-header">
<div class="row pt-3 mx-auto"><span class="icon-close2 js-menu-toggle"></span>
<p>1.製作實體記分板</p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="500" src="/images/計.jpg" width="750"/><br/></span></pre>
<p><a href="/downloads/w11記分板.ttt">記分板檔案</a></p>
<p>2.記分板<a href="/downloads/記分板.txt">程式</a></p>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="500" src="/images/場.jpg" width="750"/></span><br/>得分後球會回到中心球員不會回到原來的地方</pre>
<p></p>
<p><a href="/downloads/記分板.ttt">記分板草圖</a></p>
<a href="/downloads/w11記分板.ttt">帶有記分板+場地</a><br/>
<p></p>
</div>
</div>
</div>
</div>
</nav></div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1itAVTnyai8" title="YouTube video player" width="560"></iframe></p><h1>pj1</h1>
<h2>ag11</h2>
<p>pj1ag11倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag11">https://github.com/mdecd2023/2a-pj1ag11</a></p>
<p>pj1ag11網頁:<a href="https://mdecd2023.github.io/2a-pj1ag11/content/index.html">https://mdecd2023.github.io/2a-pj1ag11/content/index.html</a></p>
<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/ESZDNiA_DBVPnOtGrwqy0VIBC_Kj701ebfCMFrvr_sF1EA?e=NUw6pm" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">2023_remoteapi_bubbleRob.7z</a><span> </span>(<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ee_4--aOPRtFkVYTKFU6qUgBq1SPwK6nixKOX61zMBeZsw?e=TbbREn" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">2aw6 如何在 chatGPT 協助下開發 remote API 控制程式.mp4</a>)</p>
<p style="box-sizing: border-box; margin-top: 0px; margin-bottom: 1rem; color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; padding-left: 30px;"><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ee74da1clrdAn49V_Az20_kBt4MBo_GcbjQj3hu5gIzP8w?e=D4n14Q" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">透過鍵盤控制 bubbleRob 的場景與 remote API 程式.7z</a><span> </span>(<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EfKKLx6WMHNKn0A8EXT7H2wBYZLVW2MyDocik-sZnpuZzg?e=m8TENv" style="box-sizing: border-box; color: #212226; text-decoration: none; background-color: transparent; transition: all 0.2s ease-out 0s; font-weight: 400; border-bottom: 1px solid #f26a3d;">示範操作影片.mp4</a>)</p>
<p>利用newbing_bubbleRob_remoteapi1.py &gt;tools&gt;go 執行程式</p>
<p>並且下載pip install keyboard 才可利用鍵盤控制bubbleRob執行前進 , 後退和左右等指令來操控機器人</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/bJteQZypPm0" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>製作球場步驟與sensor</p>
<p></p>
<script>
var winkVideoData7 = {

  dataVersion: 1,

  frameRate: 10,

  buttonFrameLength: 5,

  buttonFrameOffset: 2,

  frameStops: {

  },

};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData7" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0327.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">導入記分板與更改錯誤</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData8 = {

  dataVersion: 1,

  frameRate: 10,

  buttonFrameLength: 5,

  buttonFrameOffset: 2,

  frameStops: {

  },

};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData8" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">sensor,球與本體的偵測錯誤</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData9 = {

  dataVersion: 1,

  frameRate: 10,

  buttonFrameLength: 5,

  buttonFrameOffset: 2,

  frameStops: {

  },

};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData9" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410-2.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass">修正sensor,球體與本體之錯誤(可正常執行遊玩)</div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<script>
var winkVideoData11 = {

  dataVersion: 1,

  frameRate: 10,

  buttonFrameLength: 5,

  buttonFrameOffset: 2,

  frameStops: {

  },

};
</script>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData11" height="580" muted="true" width="1000">
<source src="./../downloads/ag11/0410-3.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
</div>
</div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/knIP8Pfp9sQ" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p>程式下載 : <a href="/downloads/pj1ag11.ttt">football程式</a></p>
<p></p>
<p>football 製作心得 :</p>
<p>在製作本次的football作業時，有遇到一些問題，有關於sensor,記分板,與本體偵測與球體偵測的問題，遇到最嚴重的問題是球體偵測的問題，因為沒有辦法找到程式中球體的正確數值，所以都無法偵測球體的得分，所以尋求的同學的幫助，在程式中加了關於球的檢測數值，再導入程式中的數值，就可以正常的運行並遊玩了。</p>
<h2>ag17</h2>
<p>組員:41023120呂昕叡、41023118吳政憲</p>
<p>pj1倉儲:<a href="https://github.com/mdecd2023/2a-pj1ag17">https://github.com/mdecd2023/2a-pj1ag17</a></p>
<p>pj1網頁:<a href="https://mdecd2023.github.io/2a-pj1ag17/content/football.html">https://mdecd2023.github.io/2a-pj1ag17/content/football.html</a></p>
<p>製作足球場 <a href="/downloads/ag17/football.stl">onshape檔案</a></p>
<p>              <a href="/downloads/ag17/footboll1.ttt">CoppeliaSim檔案</a></p>
<p><span style="color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">
<script>
var winkVideoData11 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData11" height="630" muted="true" width="1008">
<source src="./../downloads/ag17/football.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoOverlayClass">導入主程式和記分板</div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<p><span style="color: #000000; font-family: Quicksand, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji'; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial; display: inline !important; float: none;">
<script>
var winkVideoData12 = {
  dataVersion: 1,
  frameRate: 10,
  buttonFrameLength: 5,
  buttonFrameOffset: 2,
  frameStops: {
  },
};
</script>
</span></p>
<div class="winkVideoContainerClass"><video autoplay="autoplay" class="winkVideoClass" controls="controls" data-dirname="./../cmsimde/static" data-varname="winkVideoData12" height="630" muted="true" width="1008">
<source src="./../downloads/ag17/football3.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"><a href="/downloads/ag17/footboll FINAL.ttt">football檔案</a></div>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoOverlayClass">
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="100" src="/images/分數.jpg" width="500"/><br/></span></pre>
這段代碼用於進行一些初始化操作。具體來說，我們將一個名為 count 的變量初始化為 18000，這個變量用於存儲倒計時的剩餘時間，單位為秒。我們還將 score1 和 score2 變量初始化為 0，這兩個變量用於表示兩個玩家的得分。</div>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoOverlayClass">
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="200" src="/images/ui.jpg" width="1000"/><br/></span></pre>
這段程式碼是用來建立一個使用者介面(UI)，讓使用者可以看到遊戲時間和兩方的得分。程式中使用了XML格式的字串來定義介面的樣式，其中包括了三個標籤(Label)，分別是時間、玩家1得分和玩家2得分，以及對應的位置和樣式設定。</div>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoOverlayClass">
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="200" src="/images/3.jpg" width="1000"/><br/></span></pre>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"> <img alt="" height="700" src="/images/3a.jpg" width="1000"/><br/></span></pre>
bubbleRobBase=18 ball=23這是用程式測出來的距離 sysCall_init() 函數用於初始化仿真環境和一些變量，而 sysCall_actuation() 函數用於執行機器人的運動和動作，以及更新計時器和得分標籤的顯示。 sensor1 和 sensor2 變量是用來存儲兩個傳感器的句柄，這些傳感器可能被機器人用來檢測周圍環境。bubbleRobBase 變量存儲了機器人的基座句柄。ball 變量存儲了一個球的句柄。initialBubbleRobPosition 和 initialBubbleRobOrientation 分別是機器人基座的初始位置和方向。initialballPosition 和 initialballOrientation 分別是球的初始位置和方向。</div>
<div class="winkVideoOverlayClass">
<div class="RqBzHd">
<ol class="X5LH0c">
<ol class="X5LH0c">雙人對戰</ol>
</ol>
<iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lpqfC-n2GlI" title="YouTube video player" width="560"></iframe>
<ol class="X5LH0c">查詢IP位址
<li class="TrT0Xe">按下Windows + R 開啟「執行」視窗後，輸入「cmd」後點選確定。</li>
<li class="TrT0Xe">系統自動開啟「命令提示字元」視窗，接下來輸入「ipconfig /all」並按Enter。</li>
<li class="TrT0Xe">在「IPv4」位址後面就是電腦目前的<b>IP</b>位址。</li>
</ol>
</div>
</div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass">心得:我們因為實在不知道怎麼打記分板的程式所以參考了同學的程式,結果根本不知道要如何更改本來只有一條程式錯結果越用越多錯,所以直接去請教了同學,經過他的解答和解或知道了原來要測接腳,每個名子要打對不然根本偵測不到還有接腳要對,且了解到使用XML創建UI界面，設置計時器和時間到會停止模擬的功能,雖然過程並不美好但還是有去解決,感謝其他同學的幫助。</div>
</div>
</div>
</div>
</div>
<h1>w9</h1>
<p>程式檔案 <a href="/downloads/組長.py">組長</a> <a href="/downloads/組員1.py">組員1</a> <a href="/downloads/組員2.py">組員2</a><a href="/downloads/組員3.py"> 組員3</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/L9XOADGOzjw" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>w10</h1>
<p>會議記錄錄影</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/7D0U9cU2ltA" title="YouTube video player" width="560"></iframe></p>
<p>41023118 負責第1.2題</p>
<p><span>41023120 負責第3</span><span>題</span></p>
<p><span>41023122 負責第5題</span></p>
<p><span>41023124 負責第4題</span></p>
<p><span></span></p>
<p><strong>1.What is zmqRemoteAPI, and how does it relate to CoppeliaSim?</strong></p>
<p>zmqRemoteAPI是一個通訊接口，允許外部程序與機器人仿真軟件CoppeliaSim進行交互。它基於ZeroMQ庫，為遠程應用程序提供了一種輕量級和高效的方式來訪問CoppeliaSim的功能。</p>
<p>使用zmqRemoteAPI，用戶可以使用各種編程語言（如Python、C++和Lua）控制和監視CoppeliaSim中的仿真。該接口允許外部程序和仿真之間交換數據，使用戶可以創建自定義腳本和應用程序來擴展CoppeliaSim的功能。</p>
<p>總之，zmqRemoteAPI是一個通訊接口，使外部程序能夠與CoppeliaSim進行通訊，為用戶提供了一種靈活和高效的方式來控制和監視軟件中的仿真。</p>
<p><strong>2.How do you establish a connection between a Python script and CoppeliaSim using zmqRemoteAPI?</strong></p>
<p>在CoppeliaSim場景中添加一個Remote API Server對象，可以在CoppeliaSim中通過Add-ons &gt; Remote API Server選項添加。</p>
<p>在Python中使用zmq模組建立一個socket，並連接到CoppeliaSim的Remote API Server。需要指定CoppeliaSim的IP地址和端口號。</p>
<p>發送指令給CoppeliaSim，例如運動控制、數據讀寫等操作。</p>
<p>接收來自CoppeliaSim的回傳信息，例如機器人的位置、碰撞情況等。</p>
<p>在Python中可以使用vrep.py或vrepConst.py這些API函數庫，可以方便地使用zmqRemoteAPI與CoppeliaSim進行通信。使用zmqRemoteAPI可以輕鬆實現Python與CoppeliaSim之間的數據傳輸和控制操作，適用於控制仿真、數據傳輸、遠程控制、集成外部模塊等多種應用場景。</p>
<p><strong>3.What are some common use cases for zmqRemoteAPI in CoppeliaSim?</strong></p>
<p><strong><a href="/downloads/bubbleRob_zmq_green_red_example.zip">zmqRemoteAP</a></strong></p>
<p>zmqRemoteAPI是CoppeliaSim中非常重要的一個功能，可以實現與外部程式的通訊，使CoppeliaSim更加靈活和強大。使用zmqRemoteAPI可以控制仿真，實現自動化控制，例如控制機器人運動、碰撞、動作等。同時也可以將CoppeliaSim中的數據傳輸到外部程式中，例如進行數據分析、處理和可視化等</p>
<p><strong>4.What are the advantages and disadvantages of using zmqRemoteAPI compared to other methods of communication between Python and CoppeliaSim?</strong></p>
<p>zmqRemoteAPI 是 CoppeliaSim 中的一種通訊協議，具有輕量級和高性能的特點，允許您從外部應用程序與 CoppeliaSim 進行交互。它基於 ZeroMQ，一個流行的消息庫，提供了進程間快速可靠的通訊。在 CoppeliaSim 中，zmqRemoteAPI 可以用於遠程控制仿真，從外部應用程序控制正在運行的 CoppeliaSim 仿真的行為，例如啟動和停止仿真、設置仿真參數、以及實時檢索仿真數據。此外，它還可用於自動化重複的仿真任務，例如參數掃描、靈敏度分析和優化例程，這可以幫助您節省時間並提高仿真工作流的效率。zmqRemoteAPI 還可與其他軟件工具和框架集成，例如 Python、MATLAB、ROS 和 LabVIEW，這使您可以利用這些工具在您的仿真中，並創建複雜的跨學科仿真。此外，您還可以使用 zmqRemoteAPI 開發自定義插件，以擴展 CoppeliaSim 的功能，例如添加新傳感器、執行器或控制器到仿真環境中，或與外部硬件接口的插件。最後，zmqRemoteAPI 還可用於實時調試和測試仿真代碼和腳本，例如設置斷點、檢查變量，並遠程逐步執行代碼，這可以幫助您更有效地識別和修復錯誤和問題。</p>
<p><strong>5.Can you give an example of a project or task that you could complete using zmqRemoteAPI in CoppeliaSim?</strong></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/L9XOADGOzjw" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>w11</h1>
<div style="box-sizing: border-box; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', system-ui, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Web', sans-serif; font-size: 14px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; white-space: normal; widows: 2; word-spacing: 0px;">
<div>帶有執行 zmqRemoteAPI, CoppeliaSim 與 Portable Solid Edge (或使用電腦的 CAD) 所需的環境, 準備到第一排中間三台電腦中進行 pj2 協同查驗.</div>
<div>查驗項目:</div>
<ol>
<ol>
<ol>
<li>github 分組倉儲內容維護 (各學員是否會使用 <span style="background-color: #fcd116;">https 與 SSH</span> 維護 pj2 分組網站)</li>
<li>CoppeliaSim 場景建置與 zmqRemoteAPI 操控 (各學員是否會<span style="background-color: #fcd116;">建立足球場景</span>, 並跨電腦<span style="background-color: #fcd116;">以 zmq 進行操控</span>)</li>
<li>建立對戰場景所需的 CAD 零組件建立並轉入 CoppeliaSim 備用 (各學員是否會從 CAD <span style="background-color: #fcd116;">建立零組件轉入場景</span>運用)<br/><a href="/downloads/w11test.ttt">bubbleRob.ttt</a> <a href="/downloads/w11.zip">bubbleRob_zmq_examples.7z</a></li>
</ol>
</ol>
</ol>
<pre class="tw-data-text tw-text-large tw-ta" data-placeholder="Translation" dir="ltr"><span class="Y2IQFc" lang="zh-TW"><img alt="" height="700" src="/images/w11 w.jpg" width="1000"/><br/></span></pre>
<div><a href="/downloads/w11記分板.ttt">帶有記分板+場地</a></div>
</div>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/1itAVTnyai8" title="YouTube video player" width="560"></iframe></p>